#!/bin/sh

USERS="/var/lib/iglooportal/users.txt"
PORTIP="192.168.200.11"

start() {
	#route add default gw 192.168.200.250
	mkdir -p /var/lib/iglooportal
	touch "$USERS"

	IPTABLES=/sbin/iptables

	# Create internet chain
	# This is used to authenticate users who have already signed up
	$IPTABLES -N internet -t mangle

	# First send all traffic via newly created internet chain
	# At the prerouting NAT stage this will DNAT them to the local
	# webserver for them to signup if they aren't authorised
	# Packets for unauthorised users are marked for dropping later
	$IPTABLES -t mangle -A PREROUTING -j internet

	###### INTERNET CHAIN ##########
	# Allow authorised clients in, redirect all others to login webserver
	# Add known users to the NAT table to stop their dest being rewritten
	# Ignore MAC address with a * - these users are blocked
	# This awk script goes through the $USERS flat file line by line
	awk 'BEGIN { FS="\t"; } { system("$IPTABLES -t mangle -A internet -m mac --mac-source "$4" -j RETURN"); }' "$USERS"

	# MAC address not found. Mark the packet 99
	$IPTABLES -t mangle -A internet -j MARK --set-mark 99
	################################

	# Redirects web requests from Unauthorised users to logon Web Page
	$IPTABLES -t nat -A PREROUTING -m mark --mark 99 -p tcp --dport 80  -j DNAT --to-destination $PORTIP
	$IPTABLES -t nat -A PREROUTING -m mark --mark 99 -p tcp --dport 443 -j DNAT --to-destination $PORTIP:8443

	# Now that we've got to the forward filter, drop all packets
	# marked 99 - these are unknown users. We can't drop them earlier
	# as there's no filter table
	$IPTABLES -t filter -A FORWARD -m mark --mark 99 -j DROP

	# Do the same for the INPUT chain to stop people accessing the web through Squid
	$IPTABLES -t filter -A INPUT -p tcp --dport 80  -j ACCEPT
	$IPTABLES -t filter -A INPUT -p tcp --dport 443 -j ACCEPT
	$IPTABLES -t filter -A INPUT -p udp --dport 53  -j ACCEPT
	$IPTABLES -t filter -A INPUT -m mark --mark 99  -j DROP

	# Block all but allowed
	$IPTABLES -t mangle -A internet -p tcp -m tcp --dport 80 -j MARK --set-mark 99
	$IPTABLES -t mangle -A internet -p tcp -m tcp --dport 443 -j MARK --set-mark 99
	$IPTABLES -t mangle -A internet -m mark ! --mark 99 -j MARK --set-mark 100
	$IPTABLES -t mangle -I PREROUTING -i eth1 -j internet
	$IPTABLES -t nat -I PREROUTING -i eth1 -p tcp -m mark --mark 99 -m tcp --dport 80 -j DNAT --to-destination $PORTIP
	$IPTABLES -t nat -I PREROUTING -i eth1 -p tcp -m mark --mark 99 -m tcp --dport 443 -j DNAT --to-destination $PORTIP:8443
	$IPTABLES -I FORWARD -i eth1 -m mark --mark 100 -j REJECT

	# Enable Internet connection sharing
	echo "1" > /proc/sys/net/ipv4/ip_forward
	$IPTABLES -A FORWARD -i eth1 -o eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT
	$IPTABLES -A FORWARD -i eth0 -o eth1 -j ACCEPT
	$IPTABLES -t nat -A POSTROUTING -o eth1 -j MASQUERADE
}

stop() {
	# Change policy before -F in case default policy was DROP (to avoid being locked out part way through)
	iptables -P INPUT ACCEPT
	iptables -P FORWARD ACCEPT
	iptables -P OUTPUT ACCEPT
	# Flush and delete chains
	iptables -F
	iptables -X
	iptables -t nat -F
	iptables -t nat -X
	iptables -t mangle -F
	iptables -t mangle -X
	iptables -t raw -F
	iptables -t raw -X
	iptables-restore < /etc/iptables.rules
}

savefw() {
	 iptables-save >/etc/iptables.rules
}

case $1 in
	start)
		echo "Starting iglooportal..."
		start
	;;
	status)
		iptables -L
	;;
	stop)
		echo "Stopping iglooportal..."
		stop
	;;
	restart)
		echo "Restarting iglooportal..."
		stop
		start
	;;
	savefw)
		echo "Saving iglooportal firewall rules..."
		savefw
	;;
	*)
		echo "Parameters: start, stop, restart, savefw, or status"
		exit 1
	;;
esac
