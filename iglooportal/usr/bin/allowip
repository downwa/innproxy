#!/bin/sh

IPTABLES=/sbin/iptables
ARP=/usr/sbin/arp

ip=$1
[ "$ip" = "" ] && echo "Missing IP address" 1>&2 && exit 1

# Extract MAC address from arp table
arpmac() {
	ip=$1
	$ARP -an | grep -v "<incomplete>" | grep ".*($ip)" | sed -e 's/.*(.*).*at.*\([0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]:[0-9a-f][0-9a-f]\) .*/\1/g' | head -n 1
}

# Retrieve MAC address.  If not in arp table, ping to get it there.
mac() {
	ip=$1
	mac=$(arpmac "$ip")
	if [ "$mac" = "" ]; then # If not found the first time may have timed out or never been accessed before
		ping -c 1 -f -w 0 -W 1 "$ip" >/dev/null 2>&1 # Bring into arp table
		#arping -w 0 -c 1 -I br0 "$ip" >/dev/null # Bring into arp table
		mac=$(arpmac "$ip")
	fi
}

mac "$ip"
[ "$mac" = "" ] && echo "IP address $ip does not translate to a MAC address." 1>&2 && exit 2
$IPTABLES -t nat -L auth | grep -qi "MAC.*$mac" && echo "MAC address $mac is already authorized." && exit 0

echo $IPTABLES -t nat -A auth -m mac --mac-source $mac -j serv
$IPTABLES -t nat -A auth -m mac --mac-source $mac -j serv

/usr/bin/rmtrack "$ip"
